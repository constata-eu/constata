{"version":3,"file":"static/js/542.634af003.chunk.js","mappings":"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","sources":["../node_modules/@graphiql/react/dist/Range.es.js","../node_modules/graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs","../node_modules/@graphiql/react/dist/lint.es.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nclass Range {\n  constructor(start, end) {\n    this.containsPosition = (position) => {\n      if (this.start.line === position.line) {\n        return this.start.character <= position.character;\n      }\n      if (this.end.line === position.line) {\n        return this.end.character >= position.character;\n      }\n      return this.start.line <= position.line && this.end.line >= position.line;\n    };\n    this.start = start;\n    this.end = end;\n  }\n  setStart(line, character) {\n    this.start = new Position(line, character);\n  }\n  setEnd(line, character) {\n    this.end = new Position(line, character);\n  }\n}\n__name(Range, \"Range\");\nclass Position {\n  constructor(line, character) {\n    this.lessThanOrEqualTo = (position) => this.line < position.line || this.line === position.line && this.character <= position.character;\n    this.line = line;\n    this.character = character;\n  }\n  setLine(line) {\n    this.line = line;\n  }\n  setCharacter(character) {\n    this.character = character;\n  }\n}\n__name(Position, \"Position\");\nexport { Position as P, Range as R };\n","import invariant from \"../../../jsutils/invariant.mjs\";\nimport { GraphQLError } from \"../../../error/GraphQLError.mjs\";\nimport { getNamedType, isInputObjectType } from \"../../../type/definition.mjs\";\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nexport function NoDeprecatedCustomRule(context) {\n  return {\n    Field: function Field(node) {\n      var fieldDef = context.getFieldDef();\n      var deprecationReason = fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.deprecationReason;\n\n      if (fieldDef && deprecationReason != null) {\n        var parentType = context.getParentType();\n        parentType != null || invariant(0);\n        context.reportError(new GraphQLError(\"The field \".concat(parentType.name, \".\").concat(fieldDef.name, \" is deprecated. \").concat(deprecationReason), node));\n      }\n    },\n    Argument: function Argument(node) {\n      var argDef = context.getArgument();\n      var deprecationReason = argDef === null || argDef === void 0 ? void 0 : argDef.deprecationReason;\n\n      if (argDef && deprecationReason != null) {\n        var directiveDef = context.getDirective();\n\n        if (directiveDef != null) {\n          context.reportError(new GraphQLError(\"Directive \\\"@\".concat(directiveDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n        } else {\n          var parentType = context.getParentType();\n          var fieldDef = context.getFieldDef();\n          parentType != null && fieldDef != null || invariant(0);\n          context.reportError(new GraphQLError(\"Field \\\"\".concat(parentType.name, \".\").concat(fieldDef.name, \"\\\" argument \\\"\").concat(argDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n        }\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var inputObjectDef = getNamedType(context.getParentInputType());\n\n      if (isInputObjectType(inputObjectDef)) {\n        var inputFieldDef = inputObjectDef.getFields()[node.name.value]; // flowlint-next-line unnecessary-optional-chain:off\n\n        var deprecationReason = inputFieldDef === null || inputFieldDef === void 0 ? void 0 : inputFieldDef.deprecationReason;\n\n        if (deprecationReason != null) {\n          context.reportError(new GraphQLError(\"The input field \".concat(inputObjectDef.name, \".\").concat(inputFieldDef.name, \" is deprecated. \").concat(deprecationReason), node));\n        }\n      }\n    },\n    EnumValue: function EnumValue(node) {\n      var enumValueDef = context.getEnumValue();\n      var deprecationReason = enumValueDef === null || enumValueDef === void 0 ? void 0 : enumValueDef.deprecationReason;\n\n      if (enumValueDef && deprecationReason != null) {\n        var enumTypeDef = getNamedType(context.getInputType());\n        enumTypeDef != null || invariant(0);\n        context.reportError(new GraphQLError(\"The enum value \\\"\".concat(enumTypeDef.name, \".\").concat(enumValueDef.name, \"\\\" is deprecated. \").concat(deprecationReason), node));\n      }\n    }\n  };\n}\n","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { C as CodeMirror } from \"./codemirror.es.js\";\nimport { specifiedRules, NoUnusedFragmentsRule, ExecutableDefinitionsRule, KnownFragmentNamesRule, validate, Kind, LoneSchemaDefinitionRule, UniqueOperationTypesRule, UniqueTypeNamesRule, UniqueEnumValueNamesRule, UniqueFieldDefinitionNamesRule, UniqueDirectiveNamesRule, KnownTypeNamesRule, KnownDirectivesRule, UniqueDirectivesPerLocationRule, PossibleTypeExtensionsRule, UniqueArgumentNamesRule, UniqueInputFieldNamesRule, print, parse, GraphQLError, NoDeprecatedCustomRule } from \"graphql\";\nimport { C as CharacterStream, o as onlineParser } from \"./index.es.js\";\nimport { R as Range, P as Position } from \"./Range.es.js\";\nimport \"react\";\nimport \"react-dom\";\nconst specifiedSDLRules = [\n  LoneSchemaDefinitionRule,\n  UniqueOperationTypesRule,\n  UniqueTypeNamesRule,\n  UniqueEnumValueNamesRule,\n  UniqueFieldDefinitionNamesRule,\n  UniqueDirectiveNamesRule,\n  KnownTypeNamesRule,\n  KnownDirectivesRule,\n  UniqueDirectivesPerLocationRule,\n  PossibleTypeExtensionsRule,\n  UniqueArgumentNamesRule,\n  UniqueInputFieldNamesRule\n];\nfunction validateWithCustomRules(schema, ast, customRules, isRelayCompatMode, isSchemaDocument) {\n  const rules = specifiedRules.filter((rule) => {\n    if (rule === NoUnusedFragmentsRule || rule === ExecutableDefinitionsRule) {\n      return false;\n    }\n    if (isRelayCompatMode && rule === KnownFragmentNamesRule) {\n      return false;\n    }\n    return true;\n  });\n  if (customRules) {\n    Array.prototype.push.apply(rules, customRules);\n  }\n  if (isSchemaDocument) {\n    Array.prototype.push.apply(rules, specifiedSDLRules);\n  }\n  const errors = validate(schema, ast, rules);\n  return errors.filter((error) => {\n    if (error.message.includes(\"Unknown directive\") && error.nodes) {\n      const node = error.nodes[0];\n      if (node && node.kind === Kind.DIRECTIVE) {\n        const name = node.name.value;\n        if (name === \"arguments\" || name === \"argumentDefinitions\") {\n          return false;\n        }\n      }\n    }\n    return true;\n  });\n}\n__name(validateWithCustomRules, \"validateWithCustomRules\");\nconst SEVERITY$1 = {\n  Error: \"Error\",\n  Warning: \"Warning\",\n  Information: \"Information\",\n  Hint: \"Hint\"\n};\nconst DIAGNOSTIC_SEVERITY = {\n  [SEVERITY$1.Error]: 1,\n  [SEVERITY$1.Warning]: 2,\n  [SEVERITY$1.Information]: 3,\n  [SEVERITY$1.Hint]: 4\n};\nconst invariant = /* @__PURE__ */ __name((condition, message) => {\n  if (!condition) {\n    throw new Error(message);\n  }\n}, \"invariant\");\nfunction getDiagnostics(query, schema = null, customRules, isRelayCompatMode, externalFragments) {\n  var _a, _b;\n  let ast = null;\n  let fragments = \"\";\n  if (externalFragments) {\n    fragments = typeof externalFragments === \"string\" ? externalFragments : externalFragments.reduce((acc, node) => acc + print(node) + \"\\n\\n\", \"\");\n  }\n  const enhancedQuery = fragments ? `${query}\n\n${fragments}` : query;\n  try {\n    ast = parse(enhancedQuery);\n  } catch (error) {\n    if (error instanceof GraphQLError) {\n      const range = getRange((_b = (_a = error.locations) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : { line: 0, column: 0 }, enhancedQuery);\n      return [\n        {\n          severity: DIAGNOSTIC_SEVERITY.Error,\n          message: error.message,\n          source: \"GraphQL: Syntax\",\n          range\n        }\n      ];\n    }\n    throw error;\n  }\n  return validateQuery(ast, schema, customRules, isRelayCompatMode);\n}\n__name(getDiagnostics, \"getDiagnostics\");\nfunction validateQuery(ast, schema = null, customRules, isRelayCompatMode) {\n  if (!schema) {\n    return [];\n  }\n  const validationErrorAnnotations = validateWithCustomRules(schema, ast, customRules, isRelayCompatMode).flatMap((error) => annotations(error, DIAGNOSTIC_SEVERITY.Error, \"Validation\"));\n  const deprecationWarningAnnotations = validate(schema, ast, [\n    NoDeprecatedCustomRule\n  ]).flatMap((error) => annotations(error, DIAGNOSTIC_SEVERITY.Warning, \"Deprecation\"));\n  return validationErrorAnnotations.concat(deprecationWarningAnnotations);\n}\n__name(validateQuery, \"validateQuery\");\nfunction annotations(error, severity, type) {\n  if (!error.nodes) {\n    return [];\n  }\n  const highlightedNodes = [];\n  error.nodes.forEach((node, i) => {\n    const highlightNode = node.kind !== \"Variable\" && \"name\" in node && node.name !== void 0 ? node.name : \"variable\" in node && node.variable !== void 0 ? node.variable : node;\n    if (highlightNode) {\n      invariant(error.locations, \"GraphQL validation error requires locations.\");\n      const loc = error.locations[i];\n      const highlightLoc = getLocation(highlightNode);\n      const end = loc.column + (highlightLoc.end - highlightLoc.start);\n      highlightedNodes.push({\n        source: `GraphQL: ${type}`,\n        message: error.message,\n        severity,\n        range: new Range(new Position(loc.line - 1, loc.column - 1), new Position(loc.line - 1, end))\n      });\n    }\n  });\n  return highlightedNodes;\n}\n__name(annotations, \"annotations\");\nfunction getRange(location, queryText) {\n  const parser = onlineParser();\n  const state = parser.startState();\n  const lines = queryText.split(\"\\n\");\n  invariant(lines.length >= location.line, \"Query text must have more lines than where the error happened\");\n  let stream = null;\n  for (let i = 0; i < location.line; i++) {\n    stream = new CharacterStream(lines[i]);\n    while (!stream.eol()) {\n      const style = parser.token(stream, state);\n      if (style === \"invalidchar\") {\n        break;\n      }\n    }\n  }\n  invariant(stream, \"Expected Parser stream to be available.\");\n  const line = location.line - 1;\n  const start = stream.getStartOfToken();\n  const end = stream.getCurrentPosition();\n  return new Range(new Position(line, start), new Position(line, end));\n}\n__name(getRange, \"getRange\");\nfunction getLocation(node) {\n  const typeCastedNode = node;\n  const location = typeCastedNode.loc;\n  invariant(location, \"Expected ASTNode to have a location.\");\n  return location;\n}\n__name(getLocation, \"getLocation\");\nconst SEVERITY = [\"error\", \"warning\", \"information\", \"hint\"];\nconst TYPE = {\n  \"GraphQL: Validation\": \"validation\",\n  \"GraphQL: Deprecation\": \"deprecation\",\n  \"GraphQL: Syntax\": \"syntax\"\n};\nCodeMirror.registerHelper(\"lint\", \"graphql\", (text, options) => {\n  const { schema, validationRules, externalFragments } = options;\n  const rawResults = getDiagnostics(text, schema, validationRules, void 0, externalFragments);\n  const results = rawResults.map((error) => ({\n    message: error.message,\n    severity: error.severity ? SEVERITY[error.severity - 1] : SEVERITY[0],\n    type: error.source ? TYPE[error.source] : void 0,\n    from: CodeMirror.Pos(error.range.start.line, error.range.start.character),\n    to: CodeMirror.Pos(error.range.end.line, error.range.end.character)\n  }));\n  return results;\n});\n"],"names":["__defProp","Object","defineProperty","__name","target","value","configurable","Range","start","end","this","containsPosition","position","line","character","Position","lessThanOrEqualTo","NoDeprecatedCustomRule","context","Field","node","fieldDef","getFieldDef","deprecationReason","parentType","getParentType","invariant","reportError","GraphQLError","concat","name","Argument","argDef","getArgument","directiveDef","getDirective","ObjectField","inputObjectDef","getNamedType","getParentInputType","isInputObjectType","inputFieldDef","getFields","EnumValue","enumValueDef","getEnumValue","enumTypeDef","getInputType","specifiedSDLRules","LoneSchemaDefinitionRule","UniqueOperationTypesRule","UniqueTypeNamesRule","UniqueEnumValueNamesRule","UniqueFieldDefinitionNamesRule","UniqueDirectiveNamesRule","KnownTypeNamesRule","KnownDirectivesRule","UniqueDirectivesPerLocationRule","PossibleTypeExtensionsRule","UniqueArgumentNamesRule","UniqueInputFieldNamesRule","validateWithCustomRules","schema","ast","customRules","isRelayCompatMode","isSchemaDocument","rules","specifiedRules","rule","NoUnusedFragmentsRule","ExecutableDefinitionsRule","KnownFragmentNamesRule","Array","prototype","push","apply","validate","filter","error","message","includes","nodes","kind","Kind","SEVERITY$1","DIAGNOSTIC_SEVERITY","condition","Error","getDiagnostics","query","_a","_b","externalFragments","fragments","reduce","acc","print","enhancedQuery","parse","range","getRange","locations","column","severity","source","validateQuery","validationErrorAnnotations","flatMap","annotations","deprecationWarningAnnotations","Warning","type","highlightedNodes","forEach","i","highlightNode","variable","loc","highlightLoc","getLocation","location","queryText","parser","onlineParser","state","startState","lines","split","length","stream","CharacterStream","eol","token","getStartOfToken","getCurrentPosition","SEVERITY","TYPE","CodeMirror","text","options","validationRules","map","from","to"],"sourceRoot":""}